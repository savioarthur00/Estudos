/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto_faculdade_Telas;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import projeto_faculdade.DAO.DaoTabela;
import projeto_faculdade.Fachada.Fachada;
import projeto_faculdade.Model.Aluno;
import projeto_faculdade.Model.Diretoria;
import projeto_faculdade.Model.Historico;
import projeto_faculdade.Model.Notas;

import projeto_faculdade.Model.Responsavel;
import projeto_faculdade.SqlUtil.SQL_Connection;

/**
 *
 * @author Sávio
 */
public class TelaHistórico extends javax.swing.JFrame {

    
    
      SQL_Connection conex_sql =  new SQL_Connection();
      int flag=1;
      Historico historico = new Historico();
    public TelaHistórico() {
        initComponents();
        this.setLocationRelativeTo(null);
        preencherTabela("select *from  historico order by id");
        
        List alunos;
        
        Aluno aluno = new Aluno();
        alunos =Fachada.getInstance().getAllAluno();
        
       int index =0;
       while(alunos.size() > index ){
           ComboAluno.addItem(alunos.get(index));
           index++;
           
       }
       List diretorias;
       Diretoria diretoria = new Diretoria();
        
       diretorias = Fachada.getInstance().getAll_diretoria();
       int index2 =0;
       while(diretorias.size() > index2 ){
           ComboDiretoria.addItem(diretorias.get(index2));
           index2++;
           
       }
        
       List responsaveis;
       Responsavel responsavel = new Responsavel();
        
       responsaveis = Fachada.getInstance().getAll_responsavel();
       int index3 =0;
       while(responsaveis.size() > index3 ){
           ComboResponsavel.addItem(responsaveis.get(index3));
           index3++;
           
       }
       
       List notas;
       Notas nota = new Notas();
        
      notas = Fachada.getInstance().getALL_notas();
       int index4 =0;
       while(notas.size() > index4 ){
           ComboNotas.addItem(notas.get(index4));
           index4++;
       }
        
        
        
        
        
        
    }
    
    
    public void preencherTabela(String Sql){
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{
        "ID", "Nome","ID Diretoria","ID Aluno","ID Responsavel", "ID Notas"
        };
        conex_sql.Connection();
        
        conex_sql.executaSql(Sql);
        
        try {
            conex_sql.rs.first();
            do {                
                dados.add(new Object[]{conex_sql.rs.getInt("id"),conex_sql.rs.getString("nome"),conex_sql.rs.getString("id_diretoria"),
                    conex_sql.rs.getString("id_aluno"),conex_sql.rs.getString("id_responsavel"),conex_sql.rs.getString("id_notas")});
                
            } while (conex_sql.rs.next());
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Erro ao preencher Array List");
        }
        DaoTabela daoTabela = new DaoTabela(dados, colunas);
        TabelaHistorico.setModel(daoTabela);
        
        TabelaHistorico.getColumnModel().getColumn(0).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(0).setResizable(false);
        TabelaHistorico.getColumnModel().getColumn(1).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(1).setResizable(false);
        TabelaHistorico.getColumnModel().getColumn(2).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(2).setResizable(false);
        TabelaHistorico.getColumnModel().getColumn(3).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(3).setResizable(false);
        TabelaHistorico.getColumnModel().getColumn(3).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(3).setResizable(false);
        TabelaHistorico.getColumnModel().getColumn(4).setPreferredWidth(50);
        TabelaHistorico.getColumnModel().getColumn(4).setResizable(false);
     
        
        
        
        
        TabelaHistorico.getTableHeader().setReorderingAllowed(false);
        TabelaHistorico.setAutoResizeMode(TabelaHistorico.AUTO_RESIZE_OFF);
        TabelaHistorico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        conex_sql.desconection();
        
        
    } 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButonSalvarHistorico = new javax.swing.JButton();
        ButonVoltar = new javax.swing.JButton();
        ButtonNovoHistorico = new javax.swing.JButton();
        ButtonEditarHistorico = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaHistorico = new javax.swing.JTable();
        ComboAluno = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        ComboResponsavel = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ComboNotas = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        ComboDiretoria = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        fieldID = new javax.swing.JTextField();
        fieldBuscarHistorico = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldNome = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButonSalvarHistorico.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        ButonSalvarHistorico.setForeground(new java.awt.Color(0, 0, 244));
        ButonSalvarHistorico.setText("Salvar Histórico");
        ButonSalvarHistorico.setEnabled(false);
        ButonSalvarHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButonSalvarHistoricoActionPerformed(evt);
            }
        });

        ButonVoltar.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        ButonVoltar.setForeground(new java.awt.Color(0, 0, 244));
        ButonVoltar.setText("Voltar ao Menu");
        ButonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButonVoltarActionPerformed(evt);
            }
        });

        ButtonNovoHistorico.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        ButtonNovoHistorico.setForeground(new java.awt.Color(0, 0, 244));
        ButtonNovoHistorico.setText("Novo Histórico");
        ButtonNovoHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNovoHistoricoActionPerformed(evt);
            }
        });

        ButtonEditarHistorico.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        ButtonEditarHistorico.setForeground(new java.awt.Color(0, 0, 244));
        ButtonEditarHistorico.setText("Editar Histórico");
        ButtonEditarHistorico.setEnabled(false);
        ButtonEditarHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditarHistoricoActionPerformed(evt);
            }
        });

        TabelaHistorico.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        TabelaHistorico.setForeground(new java.awt.Color(0, 0, 255));
        TabelaHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TabelaHistorico);

        ComboAluno.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        ComboAluno.setForeground(new java.awt.Color(0, 0, 255));
        ComboAluno.setEnabled(false);
        ComboAluno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboAlunoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        ComboAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAlunoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 244));
        jLabel11.setText("Aluno:");

        ComboResponsavel.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        ComboResponsavel.setForeground(new java.awt.Color(0, 0, 255));
        ComboResponsavel.setEnabled(false);
        ComboResponsavel.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboResponsavelPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        ComboResponsavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboResponsavelActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 244));
        jLabel12.setText("Responsável:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 244));
        jLabel13.setText("Notas:");

        ComboNotas.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        ComboNotas.setForeground(new java.awt.Color(0, 0, 255));
        ComboNotas.setEnabled(false);
        ComboNotas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboNotasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        ComboNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboNotasActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 244));
        jLabel14.setText("Diretoria:");

        ComboDiretoria.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        ComboDiretoria.setForeground(new java.awt.Color(0, 0, 255));
        ComboDiretoria.setEnabled(false);
        ComboDiretoria.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboDiretoriaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        ComboDiretoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDiretoriaActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        fieldID.setEnabled(false);

        jButton1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 244));
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 244));
        jLabel2.setText("Buscar pela Descrição:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 244));
        jLabel3.setText("Descrição:");

        fieldNome.setText("Exemplo: Nome do aluno");
        fieldNome.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(350, 350, 350))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldBuscarHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(311, 311, 311))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonEditarHistorico)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ButonVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButonSalvarHistorico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonNovoHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboNotas, 0, 740, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboResponsavel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboDiretoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ComboAluno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(ButtonNovoHistorico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonEditarHistorico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButonSalvarHistorico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButonVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(ComboDiretoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(ComboResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldBuscarHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ButonSalvarHistorico, ButonVoltar, ButtonEditarHistorico, ButtonNovoHistorico});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButonSalvarHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButonSalvarHistoricoActionPerformed

        if(flag==1){
            Aluno aluno_selecionado = new Aluno();
            aluno_selecionado = (Aluno) this.ComboAluno.getSelectedItem();

             Diretoria diretoria_selecionada = new Diretoria();
            diretoria_selecionada = (Diretoria) this.ComboDiretoria.getSelectedItem();
            
            Responsavel responsavel_selecionado = new Responsavel();
            responsavel_selecionado = (Responsavel) this.ComboResponsavel.getSelectedItem();
           
            Notas notas_selecionada = new Notas();
            notas_selecionada = (Notas) this.ComboNotas.getSelectedItem();
            
            Historico historico = new Historico(fieldNome.getText(),aluno_selecionado, diretoria_selecionada, notas_selecionada, responsavel_selecionado);
            
            
            

            if(Fachada.getInstance().salvar_Historico(historico)){
                JOptionPane.showMessageDialog(null, "Historico salvo com sucesso");
                ButtonNovoHistorico.setEnabled(true);
                ButonSalvarHistorico.setEnabled(false);

            }
            else{
                JOptionPane.showMessageDialog(null, "Erro ao salvar historico");
                ButtonNovoHistorico.setEnabled(true);
                ButonSalvarHistorico.setEnabled(false);
            }
        }
        else{
            Aluno aluno_selecionado = new Aluno();
            aluno_selecionado = (Aluno) this.ComboAluno.getSelectedItem();

            Diretoria diretoria_selecionada = new Diretoria();
            diretoria_selecionada = (Diretoria) this.ComboDiretoria.getSelectedItem();
            
            Responsavel responsavel_selecionado = new Responsavel();
            responsavel_selecionado = (Responsavel) this.ComboResponsavel.getSelectedItem();
           
            Notas notas_selecionada = new Notas();
            notas_selecionada = (Notas) this.ComboNotas.getSelectedItem();
            
            historico.setId(Integer.parseInt(fieldID.getText()));
            historico.setAluno((Aluno) this.ComboAluno.getSelectedItem());
            historico.setDiretoria ((Diretoria) this.ComboDiretoria.getSelectedItem());
            historico.setResponsavel((Responsavel) this.ComboResponsavel.getSelectedItem());
            historico.setNotas((Notas) this.ComboNotas.getSelectedItem());
            historico.setNome(fieldNome.getText());
            
            

            Fachada.getInstance().editar_historico(historico);
            ButtonNovoHistorico.setEnabled(true);
            ButonSalvarHistorico.setEnabled(false);
        }

    }//GEN-LAST:event_ButonSalvarHistoricoActionPerformed

    private void ButonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButonVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_ButonVoltarActionPerformed

    private void ButtonNovoHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNovoHistoricoActionPerformed

        flag=1;
        fieldNome.setEnabled(true);
        ComboAluno.setEnabled(true);
        ComboDiretoria.setEnabled(true);
        ComboNotas.setEnabled(true);
        ComboResponsavel.setEnabled(true);
        ButonSalvarHistorico.setEnabled(true);
        ButtonNovoHistorico.setEnabled(false);

    }//GEN-LAST:event_ButtonNovoHistoricoActionPerformed

    private void ButtonEditarHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditarHistoricoActionPerformed
        ButonSalvarHistorico.setEnabled(true);

        flag=2;
       
        
        ComboAluno.setEnabled(true);
        ComboDiretoria.setEnabled(false);
        ComboNotas.setEnabled(true);
        ComboResponsavel.setEnabled(true);
        fieldNome.setEnabled(true);
        ButtonNovoHistorico.setVisible(false);

    }//GEN-LAST:event_ButtonEditarHistoricoActionPerformed

    private void ComboAlunoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAlunoPopupMenuWillBecomeInvisible
         Aluno aluno_selecionado = new Aluno();
        aluno_selecionado = (Aluno) this.ComboAluno.getSelectedItem();

        JOptionPane.showMessageDialog(null,"Aluno selecionado: " + aluno_selecionado.getId());
    }//GEN-LAST:event_ComboAlunoPopupMenuWillBecomeInvisible

    private void ComboAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAlunoActionPerformed
      
       
        
    }//GEN-LAST:event_ComboAlunoActionPerformed

    private void ComboResponsavelPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboResponsavelPopupMenuWillBecomeInvisible
        Responsavel responsavel_selecionado = new Responsavel();
        responsavel_selecionado = (Responsavel) this.ComboResponsavel.getSelectedItem();
     

    }//GEN-LAST:event_ComboResponsavelPopupMenuWillBecomeInvisible

    private void ComboResponsavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboResponsavelActionPerformed
        
        
        
    }//GEN-LAST:event_ComboResponsavelActionPerformed

    private void ComboNotasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboNotasPopupMenuWillBecomeInvisible
        
        Notas notas_selecionada = new Notas();
        notas_selecionada = (Notas) this.ComboNotas.getSelectedItem();
             

        JOptionPane.showMessageDialog(null,"Notas selecionadas: " + notas_selecionada.getId());
    }//GEN-LAST:event_ComboNotasPopupMenuWillBecomeInvisible

    private void ComboNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboNotasActionPerformed
        
    }//GEN-LAST:event_ComboNotasActionPerformed

    private void ComboDiretoriaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboDiretoriaPopupMenuWillBecomeInvisible
        Diretoria diretoria_selecionada = new Diretoria();
        diretoria_selecionada = (Diretoria) this.ComboDiretoria.getSelectedItem();
                     

        JOptionPane.showMessageDialog(null,"Diretoria selecionada: " + diretoria_selecionada.getId_direcao());
    }//GEN-LAST:event_ComboDiretoriaPopupMenuWillBecomeInvisible

    private void ComboDiretoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDiretoriaActionPerformed
        
        
        
    }//GEN-LAST:event_ComboDiretoriaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         
        historico.setPesquisa(fieldBuscarHistorico.getText());
        Fachada.getInstance().buscar_historico(historico);
        
        fieldID.setText(String.valueOf(historico.getId()));
        fieldNome.setText(historico.getNome());
        
        ButtonEditarHistorico.setEnabled(true);
        ButonSalvarHistorico.setEnabled(false);
        ButtonNovoHistorico.setEnabled(false);
        

        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaHistórico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaHistórico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButonSalvarHistorico;
    private javax.swing.JButton ButonVoltar;
    private javax.swing.JButton ButtonEditarHistorico;
    private javax.swing.JButton ButtonNovoHistorico;
    private javax.swing.JComboBox ComboAluno;
    private javax.swing.JComboBox ComboDiretoria;
    private javax.swing.JComboBox ComboNotas;
    private javax.swing.JComboBox ComboResponsavel;
    private javax.swing.JTable TabelaHistorico;
    private javax.swing.JTextField fieldBuscarHistorico;
    private javax.swing.JTextField fieldID;
    private javax.swing.JTextField fieldNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
